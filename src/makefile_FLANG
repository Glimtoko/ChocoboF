# Fortran compiler and base flags
FC := flang
FFLAGS := -O3

# Object list
all_objects =  \
	memory_manipulation.o \
	data.o \
	text_output.o \
	lagstep_fi.o \
	write_tio.o \
	write_silo.o \
	mesh_reader.o \
	sod.o \
	prog.o

# Installation directory
INSTALL_DIR := /prod/ChocoboF/bin/
SYMLINK_DIR := /prod/bin/

# Expected library locations
PROD := /usr/local/prod
TIO_DIR := $(PROD)/XXX
SILO_DIR := $(PROD)/XXX
HDF5_DIR := $(PROD)/XXX

# Include and link directories
INCLUDES :=
LINKS :=
RPATH :=
PREPRO :=
NEED_HDF = NO


# Check for libraries
TIO_CHECK := $(TIO_DIR)/include/tio_access.h

$(info Checking for TyphonIO in $(TIO_DIR))
ifneq ("$(wildcard $(TIO_CHECK))", "")
  $(info  TIO Found)
  INCLUDES += -I$(TIO_DIR)/include
  LINKS += -L$(TIO_DIR)/lib -ltyphonio_f -ltyphonio
  PREPRO += -DTIO

  NEED_HDF = YES
else
  $(info TIO Not found)
endif


SILO_CHECK := $(SILO_DIR)/include/silo_f9x.inc

$(info )
$(info Checking for SILO in $(SILO_DIR))
ifneq ("$(wildcard $(SILO_CHECK))", "")
  $(info  SILO Found)
  INCLUDES += -I$(SILO_DIR)/include
  LINKS += -L$(SILO_DIR)/lib -lsiloh5
  PREPRO += -DSILO

  NEED_HDF = YES
else
  $(info SILO Not found)
endif


ifeq ($(NEED_HDF), YES)
  $(info )
  $(info HDF5 Library required)
  HDF5_CHECK := $(HDF5_DIR)/include/h5a.mod

  $(info Checking for HDF5 in $(HDF5_DIR))
  ifneq ("$(wildcard $(HDF5_CHECK))", "")
    $(info  HDF5 Found)
    INCLUDES += -I$(HDF5_DIR)/include
    LINKS += -L$(HDF5_DIR)/lib -lhdf5_fortran -lhdf5
    RPATH += -Wl,-rpath $(PROD)/hdf5/lib
  endif
endif

$(info )
$(info ChocoboF Environment::)
$(info Fortran compiler: $(FC))
$(info Base compiler flags: $(FFLAGS))
$(info Preprocessor flags:$(PREPRO))
$(info )

.SUFFIXES:
.SUFFIXES: .o .f95 .F95
.PHONY: clean install

.f95.o:
	$(FC) $(FFLAGS) $(INCLUDES) $< -c

.F95.o:
	$(FC) $(FFLAGS) -Mpreprocess $(PREPRO) $(INCLUDES) $< -c

chocobof_flang: $(all_objects)
	$(FC) $(FFLAGS) $(all_objects) $(LINKS) $(RPATH) -o chocobof_flang

clean:
	-rm chocobof_flang
	-rm *.o
	-rm *.mod

install: chocobof_flang
	@echo Installing to $(INSTALL_DIR)
	cp chocobof_flang $(INSTALL_DIR)
	chmod +x $(INSTALL_DIR)/chocobof_flang
	ln -sf $(INSTALL_DIR)/chocobof_flang $(SYMLINK_DIR)



# Dependencies
prog.o: data.o memory_manipulation.o mesh_reader.o sod.o lagstep_fi.o text_output.o

sod.o: data.o	# For input and file unit

text_output.o: write_tio.o write_silo.o

